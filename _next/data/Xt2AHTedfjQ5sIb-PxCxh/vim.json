{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var l=t=>r(t,\"__esModule\",{value:!0});var f=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),y=(t,n)=>{for(var o in n)r(t,o,{get:n[o],enumerable:!0})},c=(t,n,o,i)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let a of g(n))!p.call(t,a)&&(o||a!==\"default\")&&r(t,a,{get:()=>n[a],enumerable:!(i=m(n,a))||i.enumerable});return t},b=(t,n)=>c(l(r(t!=null?d(u(t)):{},\"default\",!n&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),v=(t=>(n,o)=>t&&t.get(n)||(o=c(l({}),n,1),t&&t.set(n,o),o))(typeof WeakMap!=\"undefined\"?new WeakMap:0);var h=f((T,s)=>{s.exports=_jsx_runtime});var I={};y(I,{default:()=>k,frontmatter:()=>w});var e=b(h()),w={title:\"The VIM Experience\",date:\"2019-04-27\",tags:[\"vim\",\"productivity\"],draft:!1,summary:\"7 years journey with VIM\",images:[],layout:\"PostLayout\"};function x(t={}){let{wrapper:n}=t.components||{};return n?(0,e.jsx)(n,Object.assign({},t,{children:(0,e.jsx)(o,{})})):o();function o(){let i=Object.assign({blockquote:\"blockquote\",p:\"p\",code:\"code\",a:\"a\",ul:\"ul\",li:\"li\",h4:\"h4\",span:\"span\",strong:\"strong\",img:\"img\"},t.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(i.blockquote,{children:[`\n`,(0,e.jsxs)(i.p,{children:[\"For the Vim crowd, my \",(0,e.jsx)(i.code,{children:\".vimrc\"}),\" file is available on \",(0,e.jsx)(i.a,{href:\"https://github.com/omarabid/vimrc\",children:\"Github\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(i.p,{children:\"I got introduced to Vim 7 years ago. Getting started with Vim was a challenge. I think it was a typical experience: Vim has a steep learning curve and requires lots of customization to hit that nice spot. There is even a cost to start typing actual text. As I've never been introduced to a Vim-like model, my intuition for a text editor is to just start typing. When you opt for a new experience to increase your productivity, it is hard to be convinced to hit a key to start typing. It seemed counter-intuitive.\"}),`\n`,(0,e.jsxs)(i.p,{children:['That made me bail of Vim multiple times. But I always had the inklings to give it another shot. I think a part of it is \"jealousy\". Seeing other developers wrangling code in unusual ways, I wanted to have that kind of power. Also, ',(0,e.jsx)(i.a,{href:\"https://en.wikipedia.org/wiki/Carpal_tunnel_syndrome\",children:\"carpal tunnel syndrome\"}),\" is real and I needed to relieve my hands of constant switching.\"]}),`\n`,(0,e.jsx)(i.p,{children:\"It is fair to say now that I'm comfortable enough with Vim. Vim was a game changer and had a significant impact on my productivity. I can see that the time spent on configuration and customization has been paying off dividends.\"}),`\n`,(0,e.jsx)(i.p,{children:\"I rely heavily on Vim and though I made it sound like it is all roses; I do have some frustration. The editor has some considerable shortcomings; especially if you are expecting an IDE-like experience. The process of augmenting Vim to be able to support proper code formatting is rather expensive. That's something you get by default in most of the IDEs out there.\"}),`\n`,(0,e.jsx)(i.p,{children:\"The most annoying of these were:\"}),`\n`,(0,e.jsxs)(i.ul,{children:[`\n`,(0,e.jsx)(i.li,{children:\"You don't get proper language support; even for formatting. The default formatter is very basic and language agnostic. You'll have to install different plugins for different languages.\"}),`\n`,(0,e.jsx)(i.li,{children:\"Usually, there are different competing plugins for any particular language. You'll have to make a decision of what is best for you.\"}),`\n`,(0,e.jsx)(i.li,{children:\"Many plugins require external programs to function. They also need to be able to call these properly from Vim. It can be a challenge to get that working properly and the documentation might be lacking.\"}),`\n`,(0,e.jsx)(i.li,{children:\"Syntax checking is still lagging and years behind what most IDEs will offer you. This is, of course, my opinion.\"}),`\n`]}),`\n`,(0,e.jsx)(i.p,{children:\"Lately, I've been diving into Rust. So my Vim configuration has been getting accommodated accordingly. It makes this configuration a bit biased, though you can make use of the keyboard shortcuts and other goodies.\"}),`\n`,(0,e.jsxs)(i.h4,{id:\"pictures\",children:[(0,e.jsx)(i.a,{href:\"#pictures\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"Pictures\"]}),`\n`,(0,e.jsx)(i.p,{children:\"Here is a sneak peek of Vim in action.\"}),`\n`,(0,e.jsxs)(i.p,{children:[(0,e.jsx)(i.strong,{children:\"Image 1\"}),\": Splitting and switching windows.\"]}),`\n`,(0,e.jsx)(i.p,{children:(0,e.jsx)(i.a,{href:\"/static/images/blog/vim/sLwFQybFpiiidA8cttk33B0xspap.gif\",title:\"Gif image 1\",children:(0,e.jsx)(i.img,{src:\"/static/images/blog/vim/sLwFQybFpiiidA8cttk33B0xspap.gif\",alt:\"Gif Image 1\",title:\"Gif image 1\"})})}),`\n`,(0,e.jsxs)(i.p,{children:[(0,e.jsx)(i.strong,{children:\"Image 2\"}),\": Alternate between NerdTree and TagBar.\"]}),`\n`,(0,e.jsx)(i.p,{children:(0,e.jsx)(i.a,{href:\"/static/images/blog/vim/eX5BRdpiJjEgxo2wYcf8QR0xspap.gif\",children:(0,e.jsx)(i.img,{src:\"/static/images/blog/vim/eX5BRdpiJjEgxo2wYcf8QR0xspap.gif\",alt:\"gif-2-prod.gif\"})})}),`\n`,(0,e.jsxs)(i.p,{children:[(0,e.jsx)(i.strong,{children:\"Image 3\"}),\": Easymotion to navigate through text.\"]}),`\n`,(0,e.jsx)(i.p,{children:(0,e.jsx)(i.a,{href:\"/static/images/blog/vim/5yaqBAk9jgESJVx9U2Nr2L0xspap.gif\",children:(0,e.jsx)(i.img,{src:\"/static/images/blog/vim/5yaqBAk9jgESJVx9U2Nr2L0xspap.gif\",alt:\"gif-3-prod.gif\"})})}),`\n`,(0,e.jsxs)(i.p,{children:[(0,e.jsx)(i.strong,{children:\"Image 4\"}),\": Autocompletion for Rust.\"]}),`\n`,(0,e.jsx)(i.p,{children:(0,e.jsx)(i.a,{href:\"/static/images/blog/vim/oAMdhcdKoaWz1DxiBgkx6f0xspap.gif\",children:(0,e.jsx)(i.img,{src:\"/static/images/blog/vim/oAMdhcdKoaWz1DxiBgkx6f0xspap.gif\",alt:\"gif-4-prod.gif\"})})}),`\n`,(0,e.jsxs)(i.h4,{id:\"shortcuts\",children:[(0,e.jsx)(i.a,{href:\"#shortcuts\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"Shortcuts\"]}),`\n`,(0,e.jsx)(i.p,{children:\"Some of the custom shortcuts I added to Vim.\"}),`\n`,(0,e.jsxs)(i.ul,{children:[`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.code,{children:\"jj\"}),\" on insert mode to switch to command mode.\"]}),`\n`,(0,e.jsx)(i.li,{children:\"Arrow key are disabled and instead they resize the current split window.\"}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.code,{children:\"tab\"}),\" to move between buffers\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.code,{children:\"space\"}),\" + \",(0,e.jsx)(i.code,{children:\"x\"}),\" to close the current buffer.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.code,{children:\"F\"}),\" to auto-format code. For Rust, it calls the rustfmt formatter.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[\"Double \",(0,e.jsx)(i.code,{children:\"space\"}),\" to toggle between fast and slow scrolling modes.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.code,{children:\"C\"}),\" moves to visual mode and select the text between quotes.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.code,{children:\"X\"}),\" move to visual mode and select the text between brackets.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.code,{children:\"W\"}),\" move to visual mode and select the current word.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.code,{children:\"B\"}),\" to select the text inside a Tag, and \",(0,e.jsx)(i.code,{children:\"V\"}),\" to select the whole tag.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.code,{children:\"cc\"}),\" to comment/uncomment a block of code.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.code,{children:\"nj\"}),\" to toggle the NerdTree window.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.code,{children:\"nk\"}),\" to toggle to Tagbar window.\"]}),`\n`]}),`\n`,(0,e.jsxs)(i.h4,{id:\"plugins\",children:[(0,e.jsx)(i.a,{href:\"#plugins\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"Plugins\"]}),`\n`,(0,e.jsx)(i.p,{children:\"This is not an exhaustive list, but these are some Vim plugins that I'm relying on.\"}),`\n`,(0,e.jsxs)(i.ul,{children:[`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.a,{href:\"https://github.com/VundleVim/Vundle.vim\",children:\"vundle\"}),\": Vim plugins manager. A must-have.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.a,{href:\"https://github.com/rust-lang/rust.vim\",children:\"rust.vim\"}),\" and \",(0,e.jsx)(i.a,{href:\"https://github.com/racer-rust/vim-racer\",children:\"racer vim\"}),\": Add formatting and autocomplete support for Rust.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.a,{href:\"https://github.com/scrooloose/nerdtree\",children:\"NerdTree\"}),\": File explorer.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.a,{href:\"https://github.com/flazz/vim-colorschemes\",children:\"Vim colorschemes\"}),\": So you can pick a nice color combination easily.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.a,{href:\"https://github.com/easymotion/vim-easymotion\",children:\"Vim Easymotion\"}),\": Allow you to jump through text with easy.\"]}),`\n`]}),`\n`,(0,e.jsxs)(i.h4,{id:\"whats-next\",children:[(0,e.jsx)(i.a,{href:\"#whats-next\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"What's next?\"]}),`\n`,(0,e.jsx)(i.p,{children:\"I don't think my Vim setup is anywhere close to maturity.\"}),`\n`,(0,e.jsxs)(i.ul,{children:[`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.strong,{children:\"Documentation\"}),\": The Readme file could be improved. There are several steps to get the final Vim functioning which are not documented throughly.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.strong,{children:\"Source Control\"}),\": Make frequent use of Git. It helps to remind what did change and when. It can also explain why some of these changes were made.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.strong,{children:\"Docker\"}),\": It'd be great if I can run my Vim instance through a Docker container. It'll make the install process easy and ubiquitous. I'm yet to try that and not quite certain of the volumes/files handling and performance.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.strong,{children:(0,e.jsx)(i.a,{href:\"https://en.wikipedia.org/wiki/Language_Server_Protocol\",children:\"Language Server Protocol \"})}),\": I think this could be a solution to the auto-complete and syntax checking mess. Along with a containerized Vim instance, it might be possible to finally have several popular language on functioning and stable auto-complete.\"]}),`\n`,(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.strong,{children:\"Undo and Redo\"}),\": Currently I only use \",(0,e.jsx)(i.code,{children:\"u\"}),\" to undo the last action. I think this is an area where things can improve.\"]}),`\n`]})]})}}var k=x;return v(I);})();\n;return Component;","toc":[{"value":"Pictures","url":"#pictures","depth":4},{"value":"Shortcuts","url":"#shortcuts","depth":4},{"value":"Plugins","url":"#plugins","depth":4},{"value":"What's next?","url":"#whats-next","depth":4}],"frontMatter":{"readingTime":{"text":"5 min read","minutes":4.3,"time":258000,"words":860},"slug":"vim","fileName":"vim.md","title":"The VIM Experience","date":"2019-04-27T00:00:00.000Z","tags":["vim","productivity"],"draft":false,"summary":"7 years journey with VIM","images":[],"layout":"PostLayout"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.215,"time":12900,"words":43},"slug":["default"],"fileName":"default.md","name":"Abid Omar","avatar":"/static/images/avatar.png","occupation":"Entrepreneur","company":"Aderbal","email":"contact@omarabid.com","github":"https://github.com/omarabid","date":null}],"prev":null,"next":{"title":"A brief introduction to Rust","date":"2019-10-10T00:00:00.000Z","tags":["Rust","Programming"],"draft":false,"summary":"A brief introduction to Rust","images":[],"layout":"PostLayout","slug":"rust-intro"}},"__N_SSG":true}